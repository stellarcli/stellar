version: "3.7"

services:
  web:
    container_name: "${PREFIX}_web"
    image: nginx:alpine
    working_dir: /src
    ports:
      - "${WEB_PORT:-8000}:80"
    volumes:
      - ./docker/nginx/server.conf:/etc/nginx/conf.d/default.conf
      - "${BACKEND_PATH}:/src"
    links:
      - php
      - redis
      - postgres
      - pgadmin
      - mailhog

  web_mysql:
    container_name: "${PREFIX}_web_mysql"
    image: nginx:alpine
    working_dir: /src
    ports:
      - "${WEB_PORT:-8000}:80"
    volumes:
      - ./docker/nginx/server.conf:/etc/nginx/conf.d/default.conf
      - "${BACKEND_PATH}:/src"
    links:
      - php
      - redis
      - mysql
      - mailhog

  artisan:
    container_name: "${PREFIX}_artisan"
    build: docker/php/cli
    entrypoint:
      - php
      - artisan
    user: ${CURRENT_UID}
    working_dir: /src
    volumes:
      - "${BACKEND_PATH}:/src"

  phpunit:
    container_name: "${PREFIX}_phpunit"
    build: docker/php/cli
    entrypoint:
      - vendor/bin/phpunit
    user: ${CURRENT_UID}
    working_dir: /src
    volumes:
      - "${BACKEND_PATH}:/src"

  php:
    container_name: "${PREFIX}_php"
    build: docker/php/fpm
    working_dir: /src
    user: ${CURRENT_UID}
    volumes:
      - "${BACKEND_PATH}:/src"
      - ./docker/php/overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini

  mailhog:
    container_name: "${PREFIX}_mailhog"
    image: mailhog/mailhog:latest
    ports:
      - "${MAILHOG_PORT:-8025}:8025"

  postgres:
    container_name: "${PREFIX}_pgsql"
    image: mdillon/postgis
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-stellar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-stellar}
      POSTGRES_TEST_DB: ${POSTGRES_TEST_DB:-test}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
    
  mysql:
    container_name: "${PREFIX}_mysql"
    image: mysql:5.7
    ports:
     - "${MYSQL_PORT:-33060}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-$secret}
      MYSQL_DATABASE: ${MYSQL_DB:-stellar}

  redis:
    container_name: "${PREFIX}_redis"
    image: redis:alpine

  pgadmin:
    container_name: "${PREFIX}_pgadmin"
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5051}:80"
    restart: unless-stopped
